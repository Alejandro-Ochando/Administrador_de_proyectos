[{"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\index.js":"1","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\App.js":"2","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\reportWebVitals.js":"3","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\auth\\NewAccount.js":"4","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\auth\\Login.js":"5","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\Projects.js":"6","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\layout\\Sidebar.js":"7","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\NewProject.js":"8","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\ListProject.js":"9","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\Project.js":"10","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\layout\\Bar.js":"11","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\FormTask.js":"12","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\ListTask.js":"13","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\Task.js":"14","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectState.js":"15","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectContext.js":"16","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectReducer.js":"17","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\types\\index.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":669,"mtime":1611251727432,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3524,"mtime":1610912412568,"results":"23","hashOfConfig":"20"},{"size":2325,"mtime":1610756394595,"results":"24","hashOfConfig":"20"},{"size":731,"mtime":1611087526580,"results":"25","hashOfConfig":"20"},{"size":485,"mtime":1611085183606,"results":"26","hashOfConfig":"20"},{"size":2490,"mtime":1611604897226,"results":"27","hashOfConfig":"20"},{"size":883,"mtime":1611692865309,"results":"28","hashOfConfig":"20"},{"size":577,"mtime":1611608097713,"results":"29","hashOfConfig":"20"},{"size":351,"mtime":1611085173217,"results":"30","hashOfConfig":"20"},{"size":1100,"mtime":1611691199181,"results":"31","hashOfConfig":"20"},{"size":1586,"mtime":1611692691132,"results":"32","hashOfConfig":"20"},{"size":1244,"mtime":1611090651735,"results":"33","hashOfConfig":"20"},{"size":2473,"mtime":1611692303289,"results":"34","hashOfConfig":"20"},{"size":119,"mtime":1611250255600,"results":"35","hashOfConfig":"20"},{"size":1290,"mtime":1611692738199,"results":"36","hashOfConfig":"20"},{"size":278,"mtime":1611692028616,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ynp6dc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\index.js",[],["78","79"],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\App.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\reportWebVitals.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\auth\\NewAccount.js",["80"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewAccount = () => {\r\n    \r\n    //State para el inicio de sesi贸n\r\n    const [ user, saveUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        repeatpassword: ''\r\n    });\r\n\r\n    //Extraemos el usuario\r\n    const { name, email, password, repeatpassword } = user;\r\n\r\n    const onChange = e => {\r\n       saveUser({\r\n           ...user,\r\n            [e.target.name] : e.target.value\r\n       })\r\n    }\r\n\r\n    //Iniciar sesi贸n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validaci贸n sin campos vacios\r\n\r\n        // Password de 6 caracteres\r\n\r\n        // Las 2 password iguales\r\n\r\n        //Pasarlo al action\r\n    }\r\n    \r\n    return ( \r\n        \r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Crear Cuenta</h1>\r\n               \r\n                <form>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"name\">Nombre</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\" //Mismo nombre para el objeto del State\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={name}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email@live.com\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Clave</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"repeatpassword\">Confirmar Clave</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"repeatpassword\"\r\n                            name=\"repeatpassword\"\r\n                            placeholder=\"Repite tu Password\"\r\n                            value={repeatpassword}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Registrarme\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Inciar Sesi贸n\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NewAccount;","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\auth\\Login.js",["81"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    \r\n    //State para el inicio de sesi贸n\r\n    const [ user, saveUser] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    //Extraemos el usuario\r\n    const { email, password } = user;\r\n\r\n    const onChange = e => {\r\n       saveUser({\r\n           ...user,\r\n            [e.target.name] : e.target.value\r\n       })\r\n    }\r\n\r\n    //Iniciar sesi贸n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validaci贸n\r\n\r\n        //Pasarlo al action\r\n    }\r\n    \r\n    return ( \r\n        \r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar sesi贸n</h1>\r\n               \r\n                <form>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"email@live.com\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Clave</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Iniciar Sesi贸n\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n                <Link to={'/new-account'} className=\"enlace-cuenta\">\r\n                    Crear una cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Login;","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\Projects.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\layout\\Sidebar.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\NewProject.js",["82"],"import React, { Fragment, useState, useContext } from 'react';\r\nimport projectContext from '../../context/projects/projectContext';\r\n\r\nconst NewProject = () => {\r\n    \r\n\r\n    //Obtener el State del formulario \r\n    const projectsContext = useContext(projectContext);\r\n    const { form,  errorform, showForm, addProject, showError  } = projectsContext;\r\n\r\n    //State para el Project\r\n    const [project, saveProject ] = useState({\r\n        name: ''\r\n    });\r\n\r\n\r\n    //Extrayendo project del State\r\n    const { name } = project;\r\n\r\n    //Lee los contenidos del input\r\n    const onChangeProject = e => {\r\n        saveProject({\r\n            ...project,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Cuando el usuario envia el proyecto\r\n    const handlerSend = e => {\r\n        e.preventDefault();\r\n\r\n        //Validacion\r\n        if( name == '') {\r\n            showError();\r\n            return;\r\n        }\r\n\r\n        //Agregar al State\r\n        addProject(project);\r\n\r\n        //Reiniciar el form\r\n        saveProject({\r\n            name: ''\r\n        });\r\n    }\r\n    \r\n    return ( \r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={() => showForm()}\r\n            > Nuevo Proyecto </button>\r\n\r\n            { form \r\n                ?\r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={handlerSend}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Nombre Proyecto\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={onChangeProject}\r\n                            />\r\n\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\" btn btn-primario btn-block\"\r\n                                value=\"Agregar Proyecto\"\r\n                        />\r\n\r\n                        </form>\r\n                     )\r\n                :\r\n                    null\r\n            }\r\n\r\n            {errorform ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null}\r\n        </Fragment>\r\n        \r\n\r\n     );\r\n}\r\n \r\nexport default NewProject;","D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\ListProject.js",["83"],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\projects\\Project.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\layout\\Bar.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\FormTask.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\ListTask.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\components\\task\\Task.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectState.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectContext.js",[],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\context\\projects\\projectReducer.js",["84"],"D:\\Escritorio\\GitHubRepositorio\\Administrador_de_proyectos\\cliente\\src\\types\\index.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":11,"nodeType":"91","messageId":"92","endLine":25,"endColumn":19},{"ruleId":"89","severity":1,"message":"90","line":23,"column":11,"nodeType":"91","messageId":"92","endLine":23,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":33,"column":18,"nodeType":"95","messageId":"96","endLine":33,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":14,"column":8,"nodeType":"99","endLine":14,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":10,"column":1,"nodeType":"103","endLine":50,"endColumn":2},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'onSubmit' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["106"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [getProjects]",{"range":"109","text":"110"},[453,455],"[getProjects]"]